---
- hosts: app
  gather_facts: false
  run_once: true
  tasks:
    - ansible.builtin.set_fact:
        new_release_name: "{{app_name}}-{{lookup('pipe', 'date -u +%Y%m%d%H%M%S')}}"

    - ansible.builtin.set_fact:
        new_release_path: "{{releases_path}}/{{new_release_name}}"

- name: Ensure directories structure exists
  hosts: app
  gather_facts: false
  tasks:
    - become: true
      ansible.builtin.file:
        path: "{{item}}"
        state: directory
        owner: "{{deploy_user}}"
        group: "{{deploy_group}}"
        mode: u=rwX,g=rX,o=rX
      with_items:
        - "{{logs_path}}"
        - "{{pids_path}}"
        - "{{sockets_path}}"
        - "{{releases_path}}"
        - "{{repo_path}}"

- name: Deploy application
  hosts: app
  roles:
    - deploy
    # - cronjobs
    - puma

# TODO: Delete old releases which are not linked to "/var/www/app/current"

- hosts: app
  gather_facts: false
  run_once: true
  tasks:
    - name: Report distrib size
      ansible.builtin.shell: du -hs {{app_path}}/ | awk '{print $1;}'
      register: p

    - ansible.builtin.debug:
        msg: "dist size: {{size}}"
      vars:
        size: "{{p.get('stdout')}}"

    - name: Report disk usage
      ansible.builtin.debug:
        msg: "total disk space: {{total}}; available: {{available}}%"
      vars:
        mount: "{{ansible_mounts | selectattr('mount', 'equalto', '/') | list | first}}"
        total: "{{mount.size_total | filesizeformat}}"
        available: "{{(mount.size_available / mount.size_total * 100) | round}}"

    - name: Check free space threshold
      ansible.builtin.assert:
        that: "{{available}} > 0.1"
        fail_msg: low disk space!
        success_msg: disk space is enough
        quiet: true
      vars:
        mount: "{{ansible_mounts | selectattr('mount', 'equalto', '/') | list | first}}"
        available: "{{mount.size_available / mount.size_total}}"
