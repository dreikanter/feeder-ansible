# {{ ansible_managed }}

upstream puma {
  # server unix:{{ puma_socket }} fail_timeout=0;
  server 127.0.0.1:3000;
}

server {
  listen 443 ssl default deferred;
  server_name {{ letsencrypt_domain_name }};

  ssl on;
  ssl_certificate         /etc/letsencrypt/live/{{ letsencrypt_domain_name }}/fullchain.pem;
  ssl_certificate_key     /etc/letsencrypt/live/{{ letsencrypt_domain_name }}/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/{{ letsencrypt_domain_name }}/fullchain.pem;

  ssl_session_cache shared:SSL:50m;
  ssl_session_timeout 5m;
  ssl_stapling on;
  ssl_stapling_verify on;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";

  ssl_dhparam /etc/nginx/dhparams.pem;
  ssl_prefer_server_ciphers on;

  root {{ app_path }}/public;
  try_files $uri/index.html $uri @puma;

  error_page 500 502 503 504 /500.html;
  client_max_body_size 4G;
  keepalive_timeout 10;

  location @puma {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_pass http://puma;
    proxy_redirect off;

    access_log {{ logs_path }}/nginx.access.log;
    error_log {{ logs_path }}/nginx.error.log;
  }

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  if ($request_method !~ ^(GET|HEAD|PUT|PATCH|POST|DELETE|OPTIONS)$ ){
    return 405;
  }

  location /robots.txt {
    add_header Content-Type text/plain;
    return 200 "User-agent: *\nDisallow: /";
  }

  # ELB health check
  location /ping {
    add_header Content-Type text/plain;
    return 200 "Ok";
  }
}
