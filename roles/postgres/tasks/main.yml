---
- name: add apt repository key
  become: yes
  apt_key:
    id: ACCC4CF8
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc

- name: add postgresql official apt repository
  become: yes
  apt_repository:
    repo: "deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main"

- name: install postgres
  become: yes
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - "postgresql-{{ postgres_version }}"
    - "libpq-dev"
    - "postgresql-contrib-{{ postgres_version }}"
    - "postgresql-{{ postgres_version }}-postgis-{{ postgres_postgis_version }}"
    - "python-dev"
    - "python-pip"
    - "python-psycopg2"

# NOTE: psycopg2 is required for postgresql_user module

- name: configure authentication
  become: yes
  lineinfile:
    dest: "{{ postgres_hba_file }}"
    state: present
    create: yes
    line: "{{ item }}"
  with_items:
    - "local all all trust"
    - "host  all all 127.0.0.1/32 trust"
    - "host  all all ::1/128 trust"

- name: restart postgres
  become: yes
  service:
    name: postgresql
    state: restarted

- name: create db user
  become: yes
  become_user: "{{ postgresql_admin_user }}"
  postgresql_user:
    name: "{{ postgres_user }}"
    password: "{{ postgres_password }}"
    state: present
    role_attr_flags: "SUPERUSER,CREATEDB,LOGIN"

- name: create database
  become: yes
  become_user: "{{ postgresql_admin_user }}"
  postgresql_db:
    name: "{{ postgres_db_name }}"
    state: present
    owner: "{{ postgres_user }}"

- name: grant privileges
  become: yes
  become_user: "{{ postgresql_admin_user }}"
  postgresql_privs:
    database: "{{ postgres_db_name }}"
    state: "present"
    privs: "ALL"
    type: "table"
    objs: "ALL_IN_SCHEMA"
    schema: "public"
    roles: "{{ postgres_user }}"
    grant_option: yes

- name: create extensions
  become: yes
  become_user: "{{ postgresql_admin_user }}"
  postgresql_ext:
    name: "{{ item }}"
    db: "{{ postgres_db_name }}"
    state: "present"
  with_items: "{{ postgres_extensions }}"
  when: "{{ postgres_extensions }}"

- name: install pgcli
  become: yes
  pip:
    name: pgcli
