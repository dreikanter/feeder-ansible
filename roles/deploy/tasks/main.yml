---
- name: clone or update sources
  become: yes
  become_user: "{{deploy_user}}"
  git:
    repo: "{{git_url}}"
    dest: "{{repo_path}}"
    clone: yes
    update: yes
    force: yes
    version: "{{git_branch}}"
    accept_hostkey: yes
    key_file: "{{git_key_file}}"
  register: git_result

- name: install gems
  args:
    chdir: "{{repo_path}}"
  environment:
    RAILS_ENV: "{{rails_env}}"
  shell: "{{bundle}} install --deployment --without development test"

- name: push configuration key
  copy:
    src: "{{credentials_master_key_path}}"
    dest: "{{repo_path}}/config/credentials/production.key"
    owner: "{{deploy_user}}"
    group: "{{deploy_group}}"
    mode: 0600

- name: migrate db (run once)
  become: yes
  become_user: "{{deploy_user}}"
  run_once: yes
  args:
    chdir: "{{repo_path}}"
  environment:
    RAILS_ENV: "{{rails_env}}"
  shell: "{{bundle}} exec rails db:migrate --trace"

- name: create directory for the new release
  become: yes
  file:
    state: directory
    path: "{{new_release_path}}"
    owner: "{{deploy_user}}"
    group: "{{deploy_group}}"
    mode: 0755

- name: push distribution
  become: yes
  become_user: "{{deploy_user}}"
  shell: "rsync -a {{repo_path}}/ {{new_release_path}} --exclude .git --exclude node_modules"

- name: link most recent release to "/var/www/app/current"
  become: yes
  become_user: "{{deploy_user}}"
  file:
    state: link
    src: "{{new_release_path}}"
    dest: "{{app_path}}"
    force: yes
    owner: "{{deploy_user}}"
    group: "{{deploy_group}}"

# - name: notify honeybadger.io about the deployment
#   community.general.honeybadger_deployment:
#     token: "{{lookup('env', 'HONEYBADGER_TOKEN')}}"
#     environment: "production"
#     user: "ansible"
#     revision: "{{git_result.after}}"
#     repo: "{{git_url}}"
