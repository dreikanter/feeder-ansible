---
- name: Clone or update sources
  become: true
  become_user: "{{deploy_user}}"
  ansible.builtin.git:
    repo: "{{git_url}}"
    dest: "{{repo_path}}"
    clone: true
    update: true
    force: true
    version: "{{git_branch}}"
    accept_hostkey: true
    key_file: "{{git_key_file}}"
  register: git_result

- name: Install gems
  args:
    chdir: "{{repo_path}}"
  environment:
    RAILS_ENV: "{{lookup('env', 'RAILS_ENV')}}"
  ansible.builtin.shell: "{{bundle}} install --deployment --without development test"

- name: Push configuration key
  ansible.builtin.copy:
    content: "{{lookup('env', 'FEEDER_CREDENTIALS_MASTER_KEY')}}"
    dest: "{{repo_path}}/config/credentials/production.key"
    owner: "{{deploy_user}}"
    group: "{{deploy_group}}"
    mode: "0600"

- name: Migrate db (run once)
  become: true
  become_user: "{{deploy_user}}"
  run_once: true
  args:
    chdir: "{{repo_path}}"
  environment:
    RAILS_ENV: "{{lookup('env', 'RAILS_ENV')}}"
  ansible.builtin.shell: "{{bundle}} exec rails db:migrate --trace"

- name: Create directory for the new release
  become: true
  ansible.builtin.file:
    state: directory
    path: "{{new_release_path}}"
    owner: "{{deploy_user}}"
    group: "{{deploy_group}}"
    mode: "0755"

- name: Push distribution
  become: true
  become_user: "{{deploy_user}}"
  ansible.builtin.shell: rsync -a {{repo_path}}/ {{new_release_path}} --exclude .git --exclude node_modules

- name: Link most recent release to "/var/www/app/current"
  become: true
  become_user: "{{deploy_user}}"
  ansible.builtin.file:
    state: link
    src: "{{new_release_path}}"
    dest: "{{app_path}}"
    force: true
    owner: "{{deploy_user}}"
    group: "{{deploy_group}}"

# - name: notify honeybadger.io about the deployment
#   community.general.honeybadger_deployment:
#     token: "{{lookup('env', 'HONEYBADGER_TOKEN')}}"
#     environment: "production"
#     user: "ansible"
#     revision: "{{git_result.after}}"
#     repo: "{{git_url}}"
