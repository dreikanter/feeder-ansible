---
- name: ensure rubies directory exists
  become: yes
  become_user: "{{ deploy_user }}"
  file:
    path: "{{ rubies_path }}"
    state: directory
    mode: 0755
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"

- name: check if ruby is installed
  become: yes
  become_user: "{{ deploy_user }}"
  shell: "~/.rbenv/bin/rbenv versions | grep -Fq {{ ruby_version }}"
  register: ruby_version_installed
  ignore_errors: yes

- set_fact:
    ruby_is_not_installed: "{{ ruby_version_installed | failed }}"

- set_fact:
    push_ruby_binaries: "{{ ruby_is_not_installed and (push_ruby_binaries is defined) and push_ruby_binaries }}"

- set_fact:
    install_ruby_from_sources: "{{ ruby_is_not_installed and (not push_ruby_binaries) }}"

- name: install ruby from sources
  become: yes
  become_user: "{{ deploy_user }}"
  shell: ruby-install --install-dir {{ ruby_path }} ruby {{ ruby_version }} -- --disable-install-rdoc
  when: install_ruby_from_sources

- name: push prebuilt ruby binaries from local machine
  become: yes
  become_user: "{{ deploy_user }}"
  when: push_ruby_binaries
  local_action: command rsync \
    --delay-updates -FF \
    --compress \
    --timeout=10 \
    --delete-after \
    --archive \
    --no-owner \
    --no-group \
    --quiet \
    --rsh "ssh -i /secrets/scaleway" \
    "{{ local_ruby_path }}/" \
    "{{ deploy_user }}@{{inventory_hostname}}:{{ ruby_path }}"

- name: rehash rbenv
  become: yes
  become_user: "{{ deploy_user }}"
  shell: "{{ rbenv_bin }} global {{ ruby_version }} && {{ rbenv_bin }} rehash"

- name: install bundler
  become: yes
  become_user: "{{ deploy_user }}"
  shell: "{{ rbenv_root_path }}/shims/gem install bundler"
  args:
    creates: "{{ rbenv_root_path }}/shims/bundle"
