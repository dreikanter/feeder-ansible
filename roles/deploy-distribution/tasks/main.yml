---
- name: create directory for the new release
  become: yes
  file:
    state: directory
    path: "{{ new_release_path }}"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_group }}"
    mode: 0755

- name: push distribution
  local_action: command rsync \
    --delay-updates -FF \
    --compress \
    --timeout=10 \
    --delete-after \
    --archive \
    --no-owner \
    --no-group \
    --exclude=.git \
    --exclude=tmp/* \
    --exclude=log/* \
    --quiet \
    --rsh "ssh -i /secrets/scaleway" \
    "{{ local_source_path }}/" \
    "{{ deploy_user }}@{{inventory_hostname}}:{{ new_release_path }}"

- name: update ownership
  become: yes
  file:
    path: "{{ new_release_path }}"
    recurse: yes
    owner: "{{ deploy_user }}"
    group: "{{ deploy_group }}"
    mode: u=rwX,g=rX,o=rX

- name: link most recent release to "/var/www/app/current"
  become: yes
  file:
    state: link
    src: "{{ new_release_path }}"
    dest: "{{ app_path }}"
    force: yes
    owner: "{{ deploy_user }}"
    group: "{{ deploy_group }}"

- name: install gems
  become: yes
  become_user: "{{ deploy_user }}"
  args:
    chdir: "{{ new_release_path }}"
  environment:
    RAILS_ENV: "{{ rails_env }}"
  shell: "{{ bundle }} install --deployment --without development test"

- name: migrate db (run once)
  become: yes
  become_user: "{{ deploy_user }}"
  run_once: yes
  args:
    chdir: "{{ new_release_path }}"
  environment:
    RAILS_ENV: "{{ rails_env }}"
  shell: "{{ bundle }} exec rails db:migrate --trace"
